## create_final_image.py - Tommy Dougiamas
"""
This file holds functions that convert a matrix into a black and white image
"""

from PIL import Image  # Pillow >=6.0
from pathlib import Path  # OS agnostic filesystem paths
import random

from . import g  # globals


def create(matrix, output_dir=None):
	"""
	Void function that marks the solution path into the image with green and saves the image.

	:param matrix: A matrix generated by generate.py (see generate.__doc__).
	:param output_dir: String with User-supplied path to a directory where the image will be saved.
	"""
	# open the image that was inputted
	output_image = Image.new("RGB", [len(matrix[0]), len(matrix)], (255, 255 ,255))
	data = output_image.load()
	output_image.save("./test.jpg")

	for x in range(0, len(matrix)):
		for y in range(0, len(matrix[-1])):
			cell = matrix[x][y]

			if cell == "s" or cell == ".":
				color = (255, 255, 255)

			elif cell == "e" or cell == "#":
				color = (0, 0, 0)
			else:
				raise ValueError("Some items in the matrix were not recognised.")
			print(x, y)
			output_image.save(f"./maze{x}{y}.jpg")
			output_image.putpixel((x, y), color)

	out_path = Path(f"{output_dir}/maze.jpg")  # Where the image will be saved to

	output_image.save(out_path, subsampling=0, quality=100)  # Save the image with no aliasing or down-sampling

	print(f"Maze was saved at {out_path}")  # Make sure the user knows where the image was saved
